# Generated by Django 3.2 on 2021-11-03 11:33

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisatie', models.CharField(max_length=100, verbose_name='Organisatie')),
                ('name', models.CharField(max_length=100, verbose_name='Contactpersoon')),
                ('adres', models.CharField(blank=True, max_length=100, verbose_name='Adres')),
                ('postcode', models.CharField(blank=True, max_length=10, verbose_name='Postcode')),
                ('plaats', models.CharField(blank=True, max_length=100, verbose_name='Plaats')),
                ('telefoon', models.CharField(max_length=25, verbose_name='Telefoon')),
                ('email', models.EmailField(max_length=100, verbose_name='E-mail')),
                ('uuid', models.UUIDField(default=uuid.uuid4, help_text='Unique identifier (UUID4)', unique=True)),
                ('start_at', models.DateField(auto_now=True, help_text='Start date of the contact record', verbose_name='start at')),
                ('end_at', models.DateField(blank=True, help_text='End date of the contact record', null=True, verbose_name='end at')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date when the contact was registered in the system')),
            ],
        ),
        migrations.CreateModel(
            name='Domein',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Domein Naam')),
                ('url', models.URLField(max_length=100, verbose_name='URL (SLD.TLD)')),
                ('description', models.TextField(blank=True, verbose_name='Beschrijving')),
                ('http', models.BooleanField(default=False, verbose_name='http')),
                ('https', models.BooleanField(default=False, verbose_name='https')),
                ('dnssec', models.BooleanField(default=False, verbose_name='dnssec')),
                ('spf', models.BooleanField(default=False, verbose_name='spf')),
                ('spftest', models.BooleanField(default=False, verbose_name='spf')),
                ('dmarc', models.BooleanField(default=False, verbose_name='dmarc')),
                ('sts', models.BooleanField(default=False, verbose_name='sts')),
                ('opmerkingen', models.TextField(blank=True, verbose_name='Opmerkingen')),
                ('domein_start', models.DateField(blank=True, null=True, verbose_name='Domein Start')),
                ('domein_end', models.DateField(blank=True, null=True, verbose_name='Domein End')),
                ('uuid', models.UUIDField(default=uuid.uuid4, help_text='Unique identifier (UUID4)', unique=True)),
                ('start_at', models.DateField(auto_now=True, help_text='Start date of the domein record', verbose_name='start at')),
                ('end_at', models.DateField(blank=True, help_text='End date of the domein record', null=True, verbose_name='end at')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date when the Domein was registered in the system')),
                ('betrokkenen', models.ManyToManyField(blank=True, to='domeinen.Contact')),
            ],
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rol', models.CharField(max_length=100, verbose_name='Contact Rol')),
                ('uuid', models.UUIDField(default=uuid.uuid4, help_text='Unique identifier (UUID4)', unique=True)),
                ('start_at', models.DateField(auto_now=True, help_text='Start date of the rol record', verbose_name='start at')),
                ('end_at', models.DateField(blank=True, help_text='End date of the rol record', null=True, verbose_name='end at')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date when the rol was registered in the system')),
            ],
        ),
        migrations.CreateModel(
            name='Subdomein',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=100, verbose_name='Subdomain')),
                ('description', models.TextField(blank=True, verbose_name='Toelichting')),
                ('http', models.BooleanField(default=False, verbose_name='http')),
                ('https', models.BooleanField(default=False, verbose_name='https')),
                ('dnssec', models.BooleanField(default=False, verbose_name='dnssec')),
                ('spf', models.BooleanField(default=False, verbose_name='spf')),
                ('dmarc', models.BooleanField(default=False, verbose_name='dmarc')),
                ('sts', models.BooleanField(default=False, verbose_name='sts')),
                ('opmerkingen', models.TextField(blank=True, verbose_name='Opmerkingen')),
                ('start', models.DateField(blank=True, null=True, verbose_name='Subdomein Start')),
                ('end', models.DateField(blank=True, null=True, verbose_name='Subdomein End')),
                ('uuid', models.UUIDField(default=uuid.uuid4, help_text='Unique identifier (UUID4)', unique=True)),
                ('start_at', models.DateField(auto_now=True, help_text='Start date of the subdomein record', verbose_name='start at')),
                ('end_at', models.DateField(blank=True, help_text='End date of the subdomein record', null=True, verbose_name='end at')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date when the Subdomein was registered in the system')),
                ('betrokkenen', models.ManyToManyField(blank=True, to='domeinen.Contact')),
                ('domein', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='domeinen.domein')),
            ],
        ),
        migrations.AddField(
            model_name='contact',
            name='rol',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='domeinen.rol'),
        ),
    ]
